27.Given a circular integer array nums of length n, return the maximum possible sum of a non-empty subarray of nums.A circular array means the end of the array connects to the beginning of the array. Formally, the next element of nums[i] is nums[(i + 1) % n] and the previous element of nums[i] is nums[(i - 1 + n) % n].A subarray may only include each element of the fixed buffer nums at most once. Formally, for a subarray nums[i], nums[i + 1], ..., nums[j], there does not exist i <= k1, k2 <= j with k1 % n == k2 % n.
def maxSubarraySumCircular(nums):
    total_sum = max_sum = min_sum = max_temp = min_temp = nums[0]
    for num in nums[1:]:
        max_temp = max(num, max_temp + num)
        max_sum = max(max_sum, max_temp)
        min_temp = min(num, min_temp + num)
        min_sum = min(min_sum, min_temp)
        total_sum += num
    return max(max_sum, total_sum - min_sum) if max_sum > 0 else max(nums)
